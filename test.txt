1. Подготовка и начальный анализ 
Исходные данные: 
Тестовый сайт: http://185.201.252.32 
Данные для входа: Логин — user, Пароль — password. 
Цель: 
Получить мастер-ключ, используя уязвимости в системе. 
2. Анализ сетевых сервисов 
Шаг 1: Сканирование портов 
Использован инструмент nmap для сканирования открытых портов. 
Результаты: 
22 порт: OpenSSH 8.9p1 Ubuntu 3ubuntu0.11. 
80 порт: nginx 1.18.0. 
Шаг 2: Поиск уязвимостей 
OpenSSH: Обнаружена уязвимость CVE-2024-6387 (regreSSHion). 
Попытка эксплуатации не удалась из-за отсутствия обратной связи. 
nginx: Обнаружена уязвимость CVE-2021-23017. 
Эксплоит с GitHub (M507/CVE-2021-23017-PoC) оказался применим только для DoS. 
Попытка доработки эксплоита для RCE не увенчалась успехом. 
3. Анализ веб-уязвимостей 
Шаг 3: Исследование веб-интерфейса 
На главной странице обнаружена панель авторизации. 
Использован httrack для копирования сайта и локального анализа. 
Шаг 4: Поиск скрытых ресурсов 
Проанализировав код и параллельного использования GoBusters смог найти запросы и 
скрытые shadow-root  
/api/login 
/api/admin 
Шаг 5: Анализ API 
При авторизации обычного пользователя получены куки MTlhZG1pbnRva2Vu. 
Декодирование куки из base64 дало значение 19admintoken. 
Шаг 6: Тестовый запрос с куки 
Закодировал строку admin в base64: YWRtaW4=. 
Отправил запрос с куки: 
curl -H "Cookie: auth_token=YWRtaW4=" http://185.201.252.32/admin 
при запросе выдал мне исходный код страницы admin , тут я понял что что страница 
/admin загружается, но мастер-ключ не отображается напрямую. Вместо этого 
страница использует JavaScript для выполнения запроса к /api/admin и отображения 
данных. Я решил кинуть куки на api/admin  
curl -H "Cookie: auth_token=YWRtaW4=" http://185.201.252.32/api/admin 
и получил {"status":302} что означало что admin это неправильное значение , но именно 
при запросе на api/admin проверяется куки
